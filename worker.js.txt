export default {
  async fetch(req, env) {
    const url = new URL(req.url);
    const { pathname, searchParams } = url;
    const headers = {'Content-Type': 'application/json'};

    // 简单登录态cookie方案
    function getSession(r) {
      const cookie = r.headers.get('cookie') || '';
      const m = cookie.match(/token=([^;]+)/);
      return m ? m[1] : null;
    }
    async function authedUser() {
      const token = getSession(req);
      if (!token) return null;
      const r = await env.DB.prepare('SELECT * FROM users WHERE password=?').bind(token).first();
      return r;
    }
    function isAdmin(user) {
      return user && user.role === 'admin';
    }

    // 用户注册（建议首次用 D1 手动插入）
    if(pathname === '/api/register' && req.method==='POST'){
      const d = await req.json();
      const old = await env.DB.prepare('SELECT id FROM users WHERE username=?').bind(d.username).first();
      if(old) return new Response(JSON.stringify({ok:false, msg:'用户已存在'}), {headers});
      await env.DB.prepare('INSERT INTO users(username,password,role) VALUES (?,?,?)').bind(d.username, d.password, d.role||'user').run();
      return new Response(JSON.stringify({ok:true}),{headers});
    }
    // 登录
    if(pathname==='/api/login' && req.method==='POST'){
      const d = await req.json();
      const u = await env.DB.prepare('SELECT id,username,role FROM users WHERE username=? AND password=?').bind(d.username, d.password).first();
      if(u){
        return new Response(JSON.stringify({ok:true,